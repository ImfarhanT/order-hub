@page
@model HubApi.Pages.Admin.PaymentGatewayDetailsModel
@{
    ViewData["Title"] = "Payment Gateway Details";
}

<div class="container-fluid">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Payment Gateway Details</h1>
        <button type="button" class="btn btn-primary" onclick="openAddModal()">
            <i class="fas fa-plus"></i> Add Gateway
        </button>
    </div>

    <!-- Payment Gateways Table -->
    <div class="row">
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Payment Gateways</h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-bordered" id="gatewaysTable" width="100%" cellspacing="0">
                            <thead>
                                <tr>
                                    <th>Gateway Code</th>
                                    <th>Descriptor</th>
                                    <th>Fee Type</th>
                                    <th>Fees</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="gatewaysTableBody">
                                <!-- Gateway details will be loaded here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add/Edit Gateway Modal -->
<div class="modal fade" id="gatewayModal" tabindex="-1" role="dialog" aria-labelledby="gatewayModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="gatewayModalLabel">Add Payment Gateway</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="gatewayForm">
                    <input type="hidden" id="gatewayId">
                    <div class="mb-3">
                        <label for="gatewayCode" class="form-label">Gateway Code *</label>
                        <input type="text" class="form-control" id="gatewayCode" required>
                        <small class="form-text text-muted">Unique identifier for the payment gateway (e.g., woocommerce_payments, stripe)</small>
                    </div>
                    <div class="mb-3">
                        <label for="gatewayDescriptor" class="form-label">Descriptor *</label>
                        <textarea class="form-control" id="gatewayDescriptor" rows="3" required></textarea>
                        <small class="form-text text-muted">Description of the payment gateway</small>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Fee Type *</label>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="feeType" id="feeTypePercentage" value="percentage" checked>
                            <label class="form-check-label" for="feeTypePercentage">
                                Percentage (%)
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="feeType" id="feeTypeFixed" value="fixed">
                            <label class="form-check-label" for="feeTypeFixed">
                                Fixed Amount ($)
                            </label>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="gatewayFees" class="form-label" id="feesLabel">Processing Fees (%) *</label>
                        <div class="input-group">
                            <input type="number" class="form-control" id="gatewayFees" step="0.01" min="0" max="100" required>
                            <span class="input-group-text" id="feesSuffix">%</span>
                        </div>
                        <small class="form-text text-muted" id="feesHelp">Processing fee as a percentage of the transaction amount</small>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveGateway()">Save Gateway</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this payment gateway?</p>
                <p><strong>Gateway Code:</strong> <span id="deleteGatewayCode"></span></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="confirmDelete()">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentGatewayId = null;

        $(document).ready(function() {
            loadGateways();
            setupFeeTypeToggle();
        });

        function setupFeeTypeToggle() {
            $('input[name="feeType"]').change(function() {
                updateFeeInput();
            });
        }

        function updateFeeInput() {
            const feeType = $('input[name="feeType"]:checked').val();
            const feesLabel = $('#feesLabel');
            const feesSuffix = $('#feesSuffix');
            const feesHelp = $('#feesHelp');
            const gatewayFees = $('#gatewayFees');

            if (feeType === 'percentage') {
                feesLabel.text('Processing Fees (%) *');
                feesSuffix.text('%');
                feesHelp.text('Processing fee as a percentage of the transaction amount');
                gatewayFees.attr('step', '0.01');
                gatewayFees.attr('max', '100');
                gatewayFees.attr('min', '0');
            } else {
                feesLabel.text('Processing Fees ($) *');
                feesSuffix.text('$');
                feesHelp.text('Fixed processing fee amount in USD');
                gatewayFees.attr('step', '0.01');
                gatewayFees.removeAttr('max');
                gatewayFees.attr('min', '0');
            }
        }

        function loadGateways() {
            fetch('/api/v1/paymentgatewaydetails')
                .then(response => response.json())
                .then(gateways => {
                    displayGateways(gateways);
                })
                .catch(error => {
                    console.error('Error loading gateways:', error);
                    showAlert('Error loading gateways: ' + error.message, 'danger');
                });
        }

        function displayGateways(gateways) {
            const tbody = $('#gatewaysTableBody');
            tbody.empty();

            if (!gateways || gateways.length === 0) {
                tbody.append(`
                    <tr>
                        <td colspan="5" class="text-center text-muted">
                            <i class="fas fa-inbox fa-2x mb-2"></i>
                            <br>No payment gateways found. Add your first gateway above.
                        </td>
                    </tr>
                `);
                return;
            }

            gateways.forEach(gateway => {
                let feesDisplay = '';
                if (gateway.feeType === 'percentage') {
                    feesDisplay = `${gateway.feesPercentage ? parseFloat(gateway.feesPercentage).toFixed(2) : '0.00'}%`;
                } else {
                    feesDisplay = `$${gateway.feesFixed ? parseFloat(gateway.feesFixed).toFixed(2) : '0.00'}`;
                }

                const row = `
                    <tr>
                        <td><code>${gateway.gatewayCode}</code></td>
                        <td>${gateway.descriptor || 'N/A'}</td>
                        <td>
                            <span class="badge bg-${gateway.feeType === 'percentage' ? 'info' : 'success'}">
                                ${gateway.feeType === 'percentage' ? 'Percentage' : 'Fixed'}
                            </span>
                        </td>
                        <td><strong>${feesDisplay}</strong></td>
                        <td>
                            <button type="button" class="btn btn-sm btn-primary" onclick="editGateway('${gateway.id}', '${gateway.gatewayCode}', '${gateway.descriptor || ''}', '${gateway.feesPercentage || gateway.feesFixed || 0}', '${gateway.feeType}')">
                                <i class="fas fa-edit"></i> Edit
                            </button>
                            <button type="button" class="btn btn-sm btn-danger" onclick="deleteGateway('${gateway.id}', '${gateway.gatewayCode}')">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </td>
                    </tr>
                `;
                tbody.append(row);
            });
        }

        function openAddModal() {
            currentGatewayId = null;
            $('#gatewayModalLabel').text('Add Payment Gateway');
            $('#gatewayForm')[0].reset();
            $('#feeTypePercentage').prop('checked', true);
            updateFeeInput();
            $('#gatewayModal').modal('show');
        }

        function editGateway(id, code, descriptor, fees, feeType) {
            currentGatewayId = id;
            $('#gatewayModalLabel').text('Edit Payment Gateway');
            $('#gatewayCode').val(code);
            $('#gatewayDescriptor').val(descriptor);
            $('#gatewayFees').val(fees);
            $(`#feeType${feeType.charAt(0).toUpperCase() + feeType.slice(1)}`).prop('checked', true);
            updateFeeInput();
            $('#gatewayModal').modal('show');
        }

        function saveGateway() {
            // Get form values
            const gatewayCode = $('#gatewayCode').val().trim();
            const descriptor = $('#gatewayDescriptor').val().trim();
            const feeType = $('input[name="feeType"]:checked').val();
            const feesValue = parseFloat($('#gatewayFees').val());

            // Validation
            if (!gatewayCode) {
                showAlert('Please enter a gateway code', 'danger');
                $('#gatewayCode').focus();
                return;
            }

            if (!descriptor) {
                showAlert('Please enter a descriptor', 'danger');
                $('#gatewayDescriptor').focus();
                return;
            }

            if (isNaN(feesValue) || feesValue < 0) {
                showAlert('Please enter a valid fee amount', 'danger');
                $('#gatewayFees').focus();
                return;
            }

            if (feeType === 'percentage' && feesValue > 100) {
                showAlert('Percentage fees cannot exceed 100%', 'danger');
                $('#gatewayFees').focus();
                return;
            }

            const gatewayData = {
                gatewayCode: gatewayCode,
                descriptor: descriptor,
                feesValue: feesValue,
                feeType: feeType
            };

            const url = currentGatewayId ? `/api/v1/paymentgatewaydetails/${currentGatewayId}` : '/api/v1/paymentgatewaydetails';
            const method = currentGatewayId ? 'PUT' : 'POST';

            // Show loading state
            const saveBtn = $('button[onclick="saveGateway()"]');
            const originalText = saveBtn.text();
            saveBtn.text('Saving...').prop('disabled', true);

            fetch(url, {
                method: method,
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(gatewayData)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                }
                return response.json();
            })
            .then(result => {
                if (result.success || result.id) {
                    $('#gatewayModal').modal('hide');
                    loadGateways();
                    showAlert(currentGatewayId ? 'Gateway updated successfully!' : 'Gateway added successfully!', 'success');
                } else {
                    showAlert('Error saving gateway: ' + (result.error || 'Unknown error'), 'danger');
                }
            })
            .catch(error => {
                console.error('Error saving gateway:', error);
                showAlert('Error saving gateway: ' + error.message, 'danger');
            })
            .finally(() => {
                // Restore button state
                saveBtn.text(originalText).prop('disabled', false);
            });
        }

        function deleteGateway(id, code) {
            currentGatewayId = id;
            $('#deleteGatewayCode').text(code);
            $('#deleteModal').modal('show');
        }

        function confirmDelete() {
            const deleteBtn = $('button[onclick="confirmDelete()"]');
            const originalText = deleteBtn.text();
            deleteBtn.text('Deleting...').prop('disabled', true);

            fetch(`/api/v1/paymentgatewaydetails/${currentGatewayId}`, {
                method: 'DELETE'
            })
            .then(response => {
                if (response.ok) {
                    $('#deleteModal').modal('hide');
                    loadGateways();
                    showAlert('Gateway deleted successfully!', 'success');
                } else {
                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                }
            })
            .catch(error => {
                console.error('Error deleting gateway:', error);
                showAlert('Error deleting gateway: ' + error.message, 'danger');
            })
            .finally(() => {
                deleteBtn.text(originalText).prop('disabled', false);
            });
        }

        function showAlert(message, type) {
            const alertDiv = $(`
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            `);
            $('.container-fluid').prepend(alertDiv);

            setTimeout(() => {
                alertDiv.alert('close');
            }, 5000);
        }
    </script>
}

