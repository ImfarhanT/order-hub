@page
@model HubApi.Pages.Admin.SitesModel
@{
    ViewData["Title"] = "Sites Management";
}

@section Toolbar {
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createSiteModal">
        <i class="bi bi-plus-circle me-2"></i>Add New Site
    </button>
}

@if (!string.IsNullOrEmpty(Model.SuccessMessage))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @Model.SuccessMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @Model.ErrorMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="card shadow">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">WooCommerce Sites</h6>
    </div>
    <div class="card-body">
        @if (Model.Sites.Any())
        {
            <div class="table-responsive">
                <table class="table table-bordered" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Base URL</th>
                            <th>API Key</th>
                            <th>Status</th>
                            <th>Created</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var site in Model.Sites)
                        {
                            <tr>
                                <td>@site.Name</td>
                                <td>
                                    <a href="@site.BaseUrl" target="_blank" class="text-decoration-none">
                                        @site.BaseUrl
                                    </a>
                                </td>
                                <td>
                                    <code class="small">@site.ApiKey</code>
                                    <button class="btn btn-sm btn-outline-secondary ms-2" 
                                            onclick="copyToClipboard('@site.ApiKey')" 
                                            title="Copy API Key">
                                        <i class="bi bi-clipboard"></i>
                                    </button>
                                </td>
                                <td>
                                    @if (site.IsActive)
                                    {
                                        <span class="badge bg-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Inactive</span>
                                    }
                                </td>
                                <td>@site.CreatedAt.ToString("MMM dd, yyyy")</td>
                                <td>
                                    <button class="btn btn-sm btn-outline-primary" 
                                            onclick="viewSiteDetails('@site.Id')" 
                                            title="View Details">
                                        <i class="bi bi-eye"></i>
                                    </button>
                                    <button class="btn btn-sm btn-outline-warning" 
                                            onclick="toggleSiteStatus('@site.Id', @site.IsActive.ToString().ToLower())" 
                                            title="@(site.IsActive ? "Deactivate" : "Activate")">
                                        <i class="bi bi-@(site.IsActive ? "pause" : "play")"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="bi bi-globe fa-3x text-muted mb-3"></i>
                <h5 class="text-muted">No sites configured yet</h5>
                <p class="text-muted">Add your first WooCommerce site to start syncing orders.</p>
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createSiteModal">
                    <i class="bi bi-plus-circle me-2"></i>Add Your First Site
                </button>
            </div>
        }
    </div>
</div>

<!-- Create Site Modal -->
<div class="modal fade" id="createSiteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Site</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="siteName" class="form-label">Site Name</label>
                        <input type="text" class="form-control" id="siteName" name="SiteName" required>
                        <div class="form-text">A friendly name for your WooCommerce store</div>
                    </div>
                    <div class="mb-3">
                        <label for="baseUrl" class="form-label">Base URL</label>
                        <input type="url" class="form-control" id="baseUrl" name="BaseUrl" required>
                        <div class="form-text">Your WooCommerce store's main URL (e.g., https://mystore.com)</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create Site</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function copyToClipboard(text) {
            navigator.clipboard.writeText(text).then(function() {
                // Show a temporary success message
                const button = event.target.closest('button');
                const originalIcon = button.innerHTML;
                button.innerHTML = '<i class="bi bi-check"></i>';
                button.classList.remove('btn-outline-secondary');
                button.classList.add('btn-success');
                
                setTimeout(() => {
                    button.innerHTML = originalIcon;
                    button.classList.remove('btn-success');
                    button.classList.add('btn-outline-secondary');
                }, 1000);
            });
        }

        function viewSiteDetails(siteId) {
            // TODO: Implement site details view
            alert('Site details view coming soon!');
        }

        function toggleSiteStatus(siteId, currentStatus) {
            // TODO: Implement site status toggle
            alert('Site status toggle coming soon!');
        }
    </script>
}
